type: static-website

inputTypes:
  name:
    type: string
    required: true
  contentPath:
    type: string
    default: ./site
  templateValues:
    type: object
    default: {}
    required: true  # problem with default value here SC-127
  contentIndex:
    type: string
    default: index.html
  contentError:
    type: string
    default: error.html
  hostingRegion:
    type: string
    default: us-east-1
  hostingDomain:
    type: string
    required: false
    default: site-${self.instanceId}.example.com
  aliasDomain:
    type: string
    required: false
    default: www.site-${self.instanceId}.example.com

components:
  renderedFiles:
    type: mustache
    inputs:
      sourcePath: ${input.contentPath}
      values: ${input.templateValues}
  rootDomainBucket:
    type: aws-s3-bucket
    inputs:
      name: ${input.hostingDomain}
  rootDomainBucketPolicy:
    type: s3-policy
    inputs:
      bucketName: ${rootDomainBucket.name}
  siteContentUploader:
    type: s3-sync
    inputs:
      contentPath: ${renderedFiles.renderedFilePath}
      bucketName: ${rootDomainBucket.name}
  wwwDomainBucket:
    type: aws-s3-bucket
    inputs:
      name: ${input.aliasDomain}
  rootDomainBucketConfig:
    type: s3-website-config
    inputs:
      rootBucketName: ${rootDomainBucket.name}
      indexDocument: ${input.contentIndex}
      errorDocument: ${input.contentError}
      redirectBucketName: ${wwwDomainBucket.name}
      redirectToHostName: ${rootDomainBucket.name}
  # siteCloudFrontConfig:
  #   type: aws-cloudfront
  #   inputs:
  #     name: ${input.name}
  #     defaultRootObject: ${input.contentIndex}
  #     originId: ${input.hostingDomain}
  #     originDomain: ${rootDomainBucket.name}.s3.amazonaws.com
  #     aliasDomain: ${input.aliasDomain}
  #     distributionEnabled: true
  # siteRoute53Config:
  #   type: aws-route53
  #   inputs:
  #     name: ${input.name}-site-${self.instanceId}
  #     domainName: ${input.aliasDomain}
  #     dnsName: ${siteCloudFrontConfig.distribution.domainName}
